#
# CMakeLists.txt -- CMake build system for irccd
#
# Copyright (c) 2013, 2014 David Demelier <markand@malikania.fr>
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

project(api)

add_subdirectory(event)
add_subdirectory(module/irccd)
add_subdirectory(module/fs)
add_subdirectory(module/logger)
add_subdirectory(module/server)
add_subdirectory(module/system)
add_subdirectory(module/plugin)
add_subdirectory(module/parser)
add_subdirectory(module/rule)
add_subdirectory(module/socket)
add_subdirectory(module/socket-listener)
add_subdirectory(module/thread)
add_subdirectory(module/thread-pipe)
add_subdirectory(module/utf8)
add_subdirectory(module/util)

set(
	SOURCES
	${api_SOURCE_DIR}/index.txt
	${IRCCD_SOURCES}
	${EVENT_SOURCES}
	${FS_SOURCES}
	${LOGGER_SOURCES}
	${SERVER_SOURCES}
	${SYSTEM_SOURCES}
	${PLUGIN_SOURCES}
	${PARSER_SOURCES}
	${RULE_SOURCES}
	${SOCKET_SOURCES}
	${SOCKET_LISTENER_SOURCES}
	${THREAD_SOURCES}
	${THREAD_PIPE_SOURCES}
	${UTF8_SOURCES}
	${UTIL_SOURCES}
)

#
# Each Lua API file is generated by pandoc.
#
foreach (s ${SOURCES})
	#
	# inputpath: full path to the input file
	# inputbase: base name relative to the CMakeLists.txt invocation
	#
	get_filename_component(inputpath ${s} ABSOLUTE)
	file(RELATIVE_PATH inputbase ${CMAKE_CURRENT_SOURCE_DIR} ${inputpath})

	#
	# outputpath: full path to the generated file
	# outputdirectory: base directory for the output file
	#
	string(REGEX REPLACE "^(.*)\\.txt$" "\\1.html" outputname ${inputbase})
	set(outputpath ${WITH_DOCS_DIRECTORY}/api/${outputname})
	get_filename_component(outputdirectory ${outputpath} DIRECTORY)

	#
	# outputs: list of output files
	# sources: list of input files
	#
	list(APPEND outputs ${outputpath})
	list(APPEND sources ${inputpath})

	set(
		linkify_args
		${WITH_DOCS_DIRECTORY}
		${outputdirectory}
	)

	set(
		pandoc_args
		-s
		-S
		-f markdown
		-t html5
		-V lua:yes
		--template ${templates_SOURCE_DIR}/template.html
		-o ${outputpath}.tmp
		${inputpath}
	)

	add_custom_command(
		OUTPUT ${outputpath}
		COMMAND
			${CMAKE_COMMAND} -E make_directory ${outputdirectory}
		COMMAND
			${Pandoc_EXECUTABLE} ${pandoc_args}
		COMMAND
			cat ${outputpath}.tmp | $<TARGET_FILE:linkify> ${linkify_args} > ${outputpath}
		COMMAND
			rm ${outputpath}.tmp
		DEPENDS
			${inputpath}
			${templates_SOURCE_DIR}/template.html
			docs-templates
	)
endforeach ()

add_custom_target(
	docs-api
	DEPENDS ${outputs}
	SOURCES ${sources}
)

add_dependencies(docs docs-api)
